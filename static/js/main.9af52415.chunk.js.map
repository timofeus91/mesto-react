{"version":3,"sources":["images/Vector-mesto-logo.svg","components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","api","config","this","_url","url","_headers","headers","fetch","method","then","res","ok","json","Promise","reject","status","data","body","JSON","stringify","name","link","about","avatar","cardId","Card","props","class","onClick","onCardClick","type","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","userInfo","catch","err","console","log","getInitialCards","onEditAvatar","onEditProfile","onAddPlace","map","item","_id","Footer","PopupWithForm","popupOpened","isOpen","onClose","title","noValidate","children","ImagePopup","card","cardInfo","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","fullImg","setFullImg","closeAllPopups","placeholder","required","minlength","maxlength","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9af52415.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Vector-mesto-logo.c2821b38.svg\";","import logo from '../images/Vector-mesto-logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className='header page__header'>\r\n            <img className='header__logo' src={logo} alt='Логотип'/>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","//класс для подключения api\r\n\r\n class Api {\r\n    //конструктор принимает адрес куда обращаться за данными (или куда их отправлять) и настройки.\r\n    constructor(config) {\r\n        this._url = config.url;\r\n        this._headers = config.headers;\r\n    }\r\n\r\n    // метод по инициализации карточек с сервера\r\n\r\n    getInitialCards() {\r\n       return fetch(`${this._url}cards`, {\r\n             method: 'GEt',\r\n             headers: this._headers, \r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n\r\n            return Promise.reject(`Сервер недоступен. Ошибка: ${res.status}.`);\r\n        });\r\n    }\r\n\r\n    //метод по добавлению новой карточки\r\n\r\n    addNewCard(data) {\r\n        return fetch(`${this._url}cards`, {\r\n              method: 'POST',\r\n              headers: this._headers,\r\n              body: JSON.stringify({\r\n                  name: data.name,\r\n                  link: data.link,\r\n              })\r\n        }).then((res) => {\r\n             if (res.ok) {\r\n                 return res.json()\r\n             }\r\n\r\n             return Promise.reject(`Сервер недоступен. Ошибка: ${res.status}.`);\r\n         });\r\n    }\r\n\r\n    //метод по получению информации о пользователе\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._url}users/me`, {\r\n              method: 'GET',\r\n              headers: this._headers,\r\n        }).then((res) => {\r\n             if (res.ok) {\r\n                 return res.json()\r\n             }\r\n\r\n             return Promise.reject(`Сервер недоступен. Ошибка: ${res.status}.`);\r\n         });\r\n    }\r\n\r\n    //метод по изменению информации о пользователе\r\n\r\n    editUserInfo(data) {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about,\r\n              })\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n\r\n            return Promise.reject(`Сервер недоступен. Ошибка: ${res.status}.`);\r\n        });\r\n    }\r\n\r\n    //метод по смене аватарки\r\n\r\n    editUserAvatar(data) {\r\n        return fetch(`${this._url}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: data.link\r\n              })\r\n        }).then((res) => {\r\n            if (res.ok) {\r\n                return res.json()\r\n            }\r\n\r\n            return Promise.reject(`Сервер недоступен. Ошибка: ${res.status}.`);\r\n        });\r\n    }\r\n\r\n\r\n    //метод по установке лайка\r\n\r\n    putLike(cardId) {\r\n        return fetch(`${this._url}cards/likes/${cardId}/`, {\r\n            method: 'PUT',\r\n            headers: this._headers,\r\n      }).then((res) => {\r\n           if (res.ok) {\r\n               return res.json()\r\n           }\r\n\r\n           return Promise.reject(`Сервер недоступен. Ошибка: ${res.status}.`);\r\n       });\r\n    }\r\n\r\n    //метод по снятию лайка\r\n\r\n    removeLike(cardId) {\r\n        return fetch(`${this._url}cards/likes/${cardId}/`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n      }).then((res) => {\r\n           if (res.ok) {\r\n               return res.json()\r\n           }\r\n\r\n           return Promise.reject(`Сервер недоступен. Ошибка: ${res.status}.`);\r\n       });\r\n    }\r\n\r\n    //метод по удалению карточки\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this._url}cards/${cardId}/`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n      }).then((res) => {\r\n           if (res.ok) {\r\n               return res.json()\r\n           }\r\n\r\n           return Promise.reject(`Сервер недоступен. Ошибка: ${res.status}.`);\r\n       });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst api = new Api({\r\n    url: \"https://mesto.nomoreparties.co/v1/cohort-20/\", \r\n    headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"Authorization\": \"43c52a6d-19a6-461e-b067-2db5e03ba70b\",\r\n    }\r\n});\r\n\r\nexport default api;\r\n","import React from 'react';\r\n\r\nfunction Card(props) {\r\n\r\n    function handleClick() {\r\n        props.onCardClick(props);\r\n      }  \r\n\r\n    return(\r\n    \r\n        <li class='elements__item'>\r\n            <img class=\"elements__photo\" src={props.link} alt={props.name} onClick={handleClick}/>\r\n            <button type=\"button\" class='elements__delete-photo'></button>\r\n            <div class='elements__container'>\r\n                <h2 class='elements__text'>{props.name}</h2>\r\n                <div class=\"elements__like-container\">\r\n                    <button type=\"button\" class='elements__heart-button'></button>\r\n                    <p class=\"elements__like-counter\">{props.likes.length}</p>\r\n                </div>\r\n            </div> \r\n        </li> \r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport api from '../utils/api';\r\nimport Card from './Card';\r\n\r\n\r\n\r\nfunction Main(props) {\r\n    const [userName, setUserName] = React.useState([]);\r\n    const [userDescription, setUserDescription] = React.useState([]);\r\n    const [userAvatar, setUserAvatar] = React.useState([]);\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        api.getUserInfo()\r\n        .then(userInfo => {\r\n            setUserName(userInfo.name)\r\n            setUserDescription(userInfo.about)\r\n            setUserAvatar(userInfo.avatar)\r\n        })\r\n\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n\r\n\r\n        \r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        \r\n        api.getInitialCards()\r\n            .then(cards => {\r\n                console.log(cards);\r\n                setCards(cards);\r\n            })\r\n\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n\r\n        \r\n    }, []);\r\n\r\n  \r\n    \r\n\r\n    return(\r\n        <main className='content'>\r\n            \r\n            <section className='profile page__profile'>\r\n              <div className='profile__main-container'>\r\n                <div className='profile__avatar-container'>\r\n                    <img className='profile__avatar' src={userAvatar} alt='Аватарка'/>\r\n                    <div className=\"profile__avatar-overlay\">\r\n                        <button onClick={props.onEditAvatar} className='profile__avatar-edit' type=\"button\"></button>\r\n                    </div> \r\n                </div>\r\n                <div className='profile__info'>\r\n                    <div className='profile__title-button'>\r\n                        <h1 className='profile__title'>{userName}</h1>\r\n                        <button onClick={props.onEditProfile} className='profile__edit-button' type='button'></button>\r\n                    </div>\r\n                    <p className='profile__subtitle'>{userDescription}</p>\r\n                </div>\r\n              </div>\r\n                <button onClick={props.onAddPlace} className='profile__add-button' type='button'></button>\r\n\r\n            </section>\r\n            <section className='elements page__elements'>\r\n                <ul className='elements__list'>\r\n                    { cards.map(item => \r\n                            <Card\r\n                            key={item._id}\r\n                            link={item.link}\r\n                            name={item.name}\r\n                            likes={item.likes}\r\n                            onCardClick={props.onCardClick}\r\n                            \r\n                            />\r\n                        )}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","\r\nfunction Footer() {\r\n    return(\r\n        <footer className=\"footer page__footer\">\r\n            <p className='footer__text'>&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","\r\nfunction PopupWithForm(props) {\r\n\r\n    const popupOpened = props.isOpen ? 'popup_opened' :'';\r\n    return (\r\n        <div className={`popup popup_${props.name} ${popupOpened}`}>\r\n            <div className={`popup__container popup__container_${props.name}`}>\r\n                <button className={`popup__close popup__close_${props.name}`} type='button' onClick={props.onClose}></button>\r\n                <h2 className='popup__title'>{props.title}</h2>\r\n                <form className={`popup__form popup__form_${props.name}`} name={`${props.name}-form`} noValidate>\r\n                    {props.children}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default PopupWithForm;\r\n\r\n\r\n","\r\nfunction ImagePopup(props) {\r\n\r\n    const popupOpened = props.card ? 'popup_opened' :'';\r\n\r\n    return(\r\n        <div className={`popup popup_img ${popupOpened}`}>\r\n            <div className='popup__container popup__container_img'>\r\n                <button className=\"popup__close popup__close_img\" type=\"button\" onClick={props.onClose}></button>\r\n                <img className=\"popup__image\" src={props.cardInfo.link} alt={props.cardInfo.name}/>\r\n                <h2 className=\"popup__title popup__title_img\">{props.cardInfo.name}</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\nimport '../index.css';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\n\r\n\r\n\r\nfunction App() {\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n    const [selectedCard, setSelectedCard] = React.useState(false);\r\n    const [fullImg, setFullImg] = React.useState({});\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n    \r\n    \r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n    \r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n\r\n    function closeAllPopups() {\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setSelectedCard(false);\r\n    }\r\n\r\n    function handleCardClick(card) {\r\n        setSelectedCard(true);\r\n        setFullImg(card);\r\n    }\r\n\r\n  return (\r\n      <>\r\n    <div className=\"page\">\r\n        <Header />\r\n        <Main\r\n        onEditProfile={handleEditProfileClick}\r\n        onAddPlace={handleAddPlaceClick}\r\n        onEditAvatar={handleEditAvatarClick}\r\n        onCardClick={handleCardClick}\r\n        />\r\n        <Footer />\r\n\r\n        <section className='popups'>\r\n            <PopupWithForm \r\n            name='user'\r\n            title='Редактировать профиль' \r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n            >\r\n            \r\n                <input type=\"text\" className=\"popup__input popup__input_topform\" name=\"popup-name\" placeholder=\"Имя\" required minlength='2' maxlength='40' id=\"name-user-input\"/>\r\n                <span className=\"popup__span\" id=\"name-user-input-error\"></span>\r\n                <input type=\"text\" className=\"popup__input popup__input_bottomform\" name=\"popup-about\" placeholder=\"О себе\" required minlength='2' maxlength='200' id=\"about-user-input\"/>\r\n                <span className=\"popup__span\" id=\"about-user-input-error\"></span>\r\n                <button className=\"popup__button\" type='submit'>Сохранить</button>\r\n            </PopupWithForm>\r\n\r\n\r\n            <PopupWithForm\r\n            name='place'\r\n            title='Новое место'\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n            >\r\n                \r\n                <input type=\"text\" className=\"popup__input popup__input_topform\" name=\"popup-name-place\" placeholder=\"Название\" required minlength='2' maxlength='30' id=\"name-place-input\"/>\r\n                <span className='popup__span' id=\"name-place-input-error\"></span>\r\n                <input type=\"url\" className=\"popup__input popup__input_bottomform\" name=\"popup-link-photo\" placeholder=\"Ссылка на картинку\" required id=\"link-input\"/>\r\n                <span className='popup__span' id=\"link-input-error\"></span>\r\n                <button className=\"popup__button\" type='submit'>Сохранить</button>\r\n            </PopupWithForm>\r\n\r\n\r\n            <PopupWithForm name='areyousure' title='Вы уверены?'>\r\n                <button className=\"popup__button popup__button_areyousure\" type='submit'>Да</button>\r\n            </PopupWithForm>\r\n\r\n            <PopupWithForm\r\n            name='new-avatar'\r\n            title='Обновить аватар'\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            >\r\n                <input type=\"url\" className=\"popup__input popup__input_topform popup__input_new-avatar\" name=\"new-avatar-photo\" placeholder=\"Ссылка на картинку\" required id=\"new-avatar\"/>\r\n                <span className='popup__span' id=\"new-avatar-error\"></span>\r\n                <button className=\"popup__button popup__button_new-avatar\" type='submit'>Сохранить</button>\r\n            </PopupWithForm>\r\n\r\n            <ImagePopup\r\n            onClose={closeAllPopups}\r\n            card={selectedCard}\r\n            cardInfo={fullImg}\r\n             />\r\n            \r\n        </section>\r\n    </div>\r\n\r\n\r\n</>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}