{"version":3,"sources":["images/Vector-mesto-logo.svg","components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","api","config","this","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","data","method","body","JSON","stringify","name","link","about","avatar","cardId","Card","props","onClick","onCardClick","imgOpen","type","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","getUserInfo","userInfo","catch","err","console","log","getInitialCards","onEditAvatar","onEditProfile","onAddPlace","map","item","_id","Footer","Date","getFullYear","PopupWithForm","isOpen","onClose","title","noValidate","children","ImagePopup","card","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","placeholder","required","minLength","maxLength","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAAe,MAA0B,8C,OCa1BA,MAVf,WACI,OAEI,wBAAQC,UAAU,sBAAlB,SACI,qBAAKA,UAAU,eAAeC,IAAKC,EAAMC,IAAI,kD,cC2G1CC,EARH,I,WAtGR,WAAYC,GAAS,oBACjBC,KAAKC,KAAOF,EAAOG,IACnBF,KAAKG,SAAWJ,EAAOK,Q,kDAM3B,SAAeC,GACX,OAAIA,EAAIC,GACGD,EAAIE,OAGRC,QAAQC,OAAR,mJAA6CJ,EAAIK,OAAjD,Q,6BAKX,WACG,OAAOC,MAAM,GAAD,OAAIX,KAAKC,KAAT,SAAsB,CAC5BG,QAASJ,KAAKG,WAChBS,KAAKZ,KAAKa,kB,wBAKjB,SAAWC,GACP,OAAOH,MAAM,GAAD,OAAIX,KAAKC,KAAT,SAAsB,CAC5Bc,OAAQ,OACRX,QAASJ,KAAKG,SACda,KAAMC,KAAKC,UAAU,CACjBC,KAAML,EAAKK,KACXC,KAAMN,EAAKM,SAElBR,KAAKZ,KAAKa,kB,yBAKjB,WACI,OAAOF,MAAM,GAAD,OAAIX,KAAKC,KAAT,YAAyB,CAC/BG,QAASJ,KAAKG,WACjBS,KAAKZ,KAAKa,kB,0BAKjB,SAAaC,GACT,OAAOH,MAAM,GAAD,OAAIX,KAAKC,KAAT,YAAyB,CACjCc,OAAQ,QACRX,QAASJ,KAAKG,SACda,KAAMC,KAAKC,UAAU,CACjBC,KAAML,EAAKK,KACXE,MAAOP,EAAKO,UAEjBT,KAAKZ,KAAKa,kB,4BAKjB,SAAeC,GACX,OAAOH,MAAM,GAAD,OAAIX,KAAKC,KAAT,mBAAgC,CACxCc,OAAQ,QACRX,QAASJ,KAAKG,SACda,KAAMC,KAAKC,UAAU,CACjBI,OAAQR,EAAKM,SAElBR,KAAKZ,KAAKa,kB,qBAMjB,SAAQU,GACJ,OAAOZ,MAAM,GAAD,OAAIX,KAAKC,KAAT,uBAA4BsB,EAA5B,KAAuC,CAC/CR,OAAQ,MACRX,QAASJ,KAAKG,WACjBS,KAAKZ,KAAKa,kB,wBAKf,SAAWU,GACP,OAAOZ,MAAM,GAAD,OAAIX,KAAKC,KAAT,uBAA4BsB,EAA5B,KAAuC,CAC/CR,OAAQ,SACRX,QAASJ,KAAKG,WACjBS,KAAKZ,KAAKa,kB,wBAKf,SAAWU,GACP,OAAOZ,MAAM,GAAD,OAAIX,KAAKC,KAAT,iBAAsBsB,EAAtB,KAAiC,CACzCR,OAAQ,SACRX,QAASJ,KAAKG,WACjBS,KAAKZ,KAAKa,oB,KAOP,CAAQ,CAChBX,IAAK,+CACLE,QAAS,CACL,eAAgB,mBAChB,cAAiB,0CCnFVoB,MAzBf,SAAcC,GAMV,OAEI,qBAAI/B,UAAU,iBAAd,UACI,qBAAKA,UAAU,kBAAkBC,IAAK8B,EAAML,KAAMvB,IAAK4B,EAAMN,KAAMO,QAP3E,WACID,EAAME,YAAY,CAACR,KAAMM,EAAMN,KAAMC,KAAMK,EAAML,KAAMQ,SAAS,OAO5D,wBAAQC,KAAK,SAASnC,UAAU,4BAChC,sBAAKA,UAAU,sBAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgC+B,EAAMN,OACtC,sBAAKzB,UAAU,2BAAf,UACI,wBAAQmC,KAAK,SAASnC,UAAU,2BAChC,mBAAGA,UAAU,yBAAb,SAAuC+B,EAAMK,MAAMC,mBCmExDC,MA9Ef,SAAcP,GAAO,MAEeQ,IAAMC,SAAS,IAF9B,mBAEVC,EAFU,KAEAC,EAFA,OAG6BH,IAAMC,SAAS,IAH5C,mBAGVG,EAHU,KAGOC,EAHP,OAImBL,IAAMC,SAAS,IAJlC,mBAIVK,EAJU,KAIEC,EAJF,OAKSP,IAAMC,SAAS,IALxB,mBAKVO,EALU,KAKHC,EALG,KAkCjB,OA1BAT,IAAMU,WAAU,WACZ7C,EAAI8C,cACHhC,MAAK,SAAAiC,GACFT,EAAYS,EAAS1B,MACrBmB,EAAmBO,EAASxB,OAC5BmB,EAAcK,EAASvB,WAG1BwB,OAAM,SAACC,GACJC,QAAQC,IAAR,wGAAkCF,OAGtCjD,EAAIoD,kBACCtC,MAAK,SAAA6B,GACFC,EAASD,MAGZK,OAAM,SAACC,GACJC,QAAQC,IAAR,wGAAkCF,SAK3C,IAKC,uBAAMrD,UAAU,UAAhB,UAEI,0BAASA,UAAU,wBAAnB,UACE,sBAAKA,UAAU,0BAAf,UACE,sBAAKA,UAAU,4BAAf,UACI,qBAAKA,UAAU,kBAAkBC,IAAK4C,EAAY1C,IAAI,qDACtD,qBAAKH,UAAU,0BAAf,SACI,wBAAQgC,QAASD,EAAM0B,aAAczD,UAAU,uBAAuBmC,KAAK,gBAGnF,sBAAKnC,UAAU,gBAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,iBAAd,SAAgCyC,IAChC,wBAAQT,QAASD,EAAM2B,cAAe1D,UAAU,uBAAuBmC,KAAK,cAEhF,mBAAGnC,UAAU,oBAAb,SAAkC2C,UAGtC,wBAAQX,QAASD,EAAM4B,WAAY3D,UAAU,sBAAsBmC,KAAK,cAG5E,yBAASnC,UAAU,0BAAnB,SACI,oBAAIA,UAAU,iBAAd,SACM+C,EAAMa,KAAI,SAAAC,GAAI,OACR,cAAC,EAAD,CAEAnC,KAAMmC,EAAKnC,KACXD,KAAMoC,EAAKpC,KACXW,MAAOyB,EAAKzB,MACZH,YAAaF,EAAME,aAJd4B,EAAKC,gBCvDvBC,MAVf,WACI,OAEI,wBAAQ/D,UAAU,sBAAlB,SACI,oBAAGA,UAAU,eAAb,mBAAoC,IAAIgE,MAAOC,cAA/C,sBCeGC,MAnBf,SAAuBnC,GAGnB,OAEI,qBAAK/B,UAAS,sBAAiB+B,EAAMN,KAAvB,YAA+BM,EAAMoC,OAAS,eAAgB,IAA5E,SACI,sBAAKnE,UAAS,4CAAuC+B,EAAMN,MAA3D,UACI,wBAAQzB,UAAS,oCAA+B+B,EAAMN,MAAQU,KAAK,SAASH,QAASD,EAAMqC,UAC3F,oBAAIpE,UAAU,eAAd,SAA8B+B,EAAMsC,QACpC,sBAAMrE,UAAS,kCAA6B+B,EAAMN,MAAQA,KAAI,UAAKM,EAAMN,KAAX,SAAwB6C,YAAU,EAAhG,SACKvC,EAAMwC,iBCQZC,MAlBf,SAAoBzC,GAKhB,OAEI,qBAAK/B,UAAS,0BAAqB+B,EAAM0C,KAAKvC,QAAU,eAAgB,IAAxE,SACI,sBAAKlC,UAAU,wCAAf,UACI,wBAAQA,UAAU,gCAAgCmC,KAAK,SAASH,QAASD,EAAMqC,UAC/E,qBAAKpE,UAAU,eAAeC,IAAK8B,EAAM0C,KAAK/C,KAAMvB,IAAK4B,EAAM0C,KAAKhD,OACpE,oBAAIzB,UAAU,gCAAd,SAA+C+B,EAAM0C,KAAKhD,aC2G3DiD,MA9Gf,WAAgB,IAAD,EACiDnC,IAAMC,UAAS,GADhE,mBACJmC,EADI,KACoBC,EADpB,OAE2CrC,IAAMC,UAAS,GAF1D,mBAEJqC,EAFI,KAEiBC,EAFjB,OAG+CvC,IAAMC,UAAS,GAH9D,mBAGJuC,EAHI,KAGmBC,EAHnB,OAI6BzC,IAAMC,SAAS,CAACf,KAAM,GAAIC,KAAM,GAAIQ,SAAS,IAJ1E,mBAIJ+C,EAJI,KAIUC,EAJV,KAoBX,SAASC,IACLH,GAAyB,GACzBJ,GAA0B,GAC1BE,GAAuB,GACvBI,EAAgB,CAACzD,KAAM,GAAIC,KAAM,GAAIQ,SAAS,IAQpD,OACI,mCACF,sBAAKlC,UAAU,OAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CACA0D,cAzBJ,WACIkB,GAA0B,IAyB1BjB,WAtBJ,WACImB,GAAuB,IAsBvBrB,aAhCJ,WACIuB,GAAyB,IAgCzB/C,YAbJ,SAAyBwC,GACrBS,EAAgBT,MAchB,cAAC,EAAD,IAEA,0BAASzE,UAAU,SAAnB,UACI,eAAC,EAAD,CACAyB,KAAK,OACL4C,MAAM,4HACNF,OAAQQ,EACRP,QAASe,EAJT,UAOI,uBAAOhD,KAAK,OAAOnC,UAAU,oCAAoCyB,KAAK,aAAa2D,YAAY,qBAAMC,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKC,GAAG,oBAC9I,sBAAMxF,UAAU,cAAcwF,GAAG,0BACjC,uBAAOrD,KAAK,OAAOnC,UAAU,uCAAuCyB,KAAK,cAAc2D,YAAY,kCAASC,UAAQ,EAACC,UAAU,IAAIC,UAAU,MAAMC,GAAG,qBACtJ,sBAAMxF,UAAU,cAAcwF,GAAG,2BACjC,wBAAQxF,UAAU,gBAAgBmC,KAAK,SAAvC,uEAKJ,eAAC,EAAD,CACAV,KAAK,QACL4C,MAAM,gEACNF,OAAQU,EACRT,QAASe,EAJT,UAOI,uBAAOhD,KAAK,OAAOnC,UAAU,oCAAoCyB,KAAK,mBAAmB2D,YAAY,mDAAWC,UAAQ,EAACC,UAAU,IAAIC,UAAU,KAAKC,GAAG,qBACzJ,sBAAMxF,UAAU,cAAcwF,GAAG,2BACjC,uBAAOrD,KAAK,MAAMnC,UAAU,uCAAuCyB,KAAK,mBAAmB2D,YAAY,qGAAqBC,UAAQ,EAACG,GAAG,eACxI,sBAAMxF,UAAU,cAAcwF,GAAG,qBACjC,wBAAQxF,UAAU,gBAAgBmC,KAAK,SAAvC,uEAKJ,cAAC,EAAD,CAAeV,KAAK,aAAa4C,MAAM,2DAAvC,SAEI,wBAAQrE,UAAU,yCAAyCmC,KAAK,SAAhE,4BAIJ,eAAC,EAAD,CACAV,KAAK,aACL4C,MAAM,wFACNF,OAAQY,EACRX,QAASe,EAJT,UAOI,uBAAOhD,KAAK,MAAMnC,UAAU,4DAA4DyB,KAAK,mBAAmB2D,YAAY,qGAAqBC,UAAQ,EAACG,GAAG,eAC7J,sBAAMxF,UAAU,cAAcwF,GAAG,qBACjC,wBAAQxF,UAAU,yCAAyCmC,KAAK,SAAhE,uEAIJ,cAAC,EAAD,CACAiC,QAASe,EACTV,KAAMQ,aChGHQ,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzE,MAAK,YAAkD,IAA/C0E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.708d7cce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Vector-mesto-logo.c2821b38.svg\";","import React from 'react';\r\nimport logo from '../images/Vector-mesto-logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        (\r\n        <header className='header page__header'>\r\n            <img className='header__logo' src={logo} alt='Логотип'/>\r\n        </header>\r\n        )\r\n    );\r\n}\r\n\r\nexport default Header;","//класс для подключения api\r\n\r\n class Api {\r\n    //конструктор принимает адрес куда обращаться за данными (или куда их отправлять) и настройки.\r\n    constructor(config) {\r\n        this._url = config.url;\r\n        this._headers = config.headers;\r\n    }\r\n\r\n\r\n    //приватный метод с повтряющимся кодом у всех запросов (то что идет после 1 return)\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json()\r\n        }\r\n\r\n        return Promise.reject(`Сервер недоступен. Ошибка: ${res.status}.`);\r\n    }\r\n\r\n    // метод по инициализации карточек с сервера\r\n\r\n    getInitialCards() {\r\n       return fetch(`${this._url}cards`, {\r\n             headers: this._headers, \r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    //метод по добавлению новой карточки\r\n\r\n    addNewCard(data) {\r\n        return fetch(`${this._url}cards`, {\r\n              method: 'POST',\r\n              headers: this._headers,\r\n              body: JSON.stringify({\r\n                  name: data.name,\r\n                  link: data.link,\r\n              })\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    //метод по получению информации о пользователе\r\n\r\n    getUserInfo() {\r\n        return fetch(`${this._url}users/me`, {\r\n              headers: this._headers,\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    //метод по изменению информации о пользователе\r\n\r\n    editUserInfo(data) {\r\n        return fetch(`${this._url}users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about,\r\n              })\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n    //метод по смене аватарки\r\n\r\n    editUserAvatar(data) {\r\n        return fetch(`${this._url}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: data.link\r\n              })\r\n        }).then(this._checkResponse);\r\n    }\r\n\r\n\r\n    //метод по установке лайка\r\n\r\n    putLike(cardId) {\r\n        return fetch(`${this._url}cards/likes/${cardId}/`, {\r\n            method: 'PUT',\r\n            headers: this._headers,\r\n      }).then(this._checkResponse);\r\n    }\r\n\r\n    //метод по снятию лайка\r\n\r\n    removeLike(cardId) {\r\n        return fetch(`${this._url}cards/likes/${cardId}/`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n      }).then(this._checkResponse);\r\n    }\r\n\r\n    //метод по удалению карточки\r\n\r\n    deleteCard(cardId) {\r\n        return fetch(`${this._url}cards/${cardId}/`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n      }).then(this._checkResponse);\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst api = new Api({\r\n    url: \"https://mesto.nomoreparties.co/v1/cohort-20/\", \r\n    headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"Authorization\": \"43c52a6d-19a6-461e-b067-2db5e03ba70b\",\r\n    }\r\n});\r\n\r\nexport default api;\r\n","import React from 'react';\r\n\r\nfunction Card(props) {\r\n\r\n    function handleClick() {\r\n        props.onCardClick({name: props.name, link: props.link, imgOpen: true});\r\n      }  \r\n\r\n    return(\r\n    (\r\n        <li className='elements__item'>\r\n            <img className=\"elements__photo\" src={props.link} alt={props.name} onClick={handleClick}/>\r\n            <button type=\"button\" className='elements__delete-photo '></button>\r\n            <div className='elements__container'>\r\n                <h2 className='elements__text'>{props.name}</h2>\r\n                <div className=\"elements__like-container\">\r\n                    <button type=\"button\" className='elements__heart-button'></button>\r\n                    <p className=\"elements__like-counter\">{props.likes.length}</p>\r\n                </div>\r\n            </div> \r\n        </li> \r\n    )\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport api from '../utils/api';\r\nimport Card from './Card';\r\n\r\n\r\n\r\nfunction Main(props) {\r\n    //При попытке деструктуризации , как вы написали в ревью в комментарии \"можно лучше\", у меня пошли ошибки и код не работал. Видимо я не до конца понял как это правильно сделать в этом месте. Спасибо за замечание, обязательно изучу этот вопрос. \r\n    const [userName, setUserName] = React.useState('');\r\n    const [userDescription, setUserDescription] = React.useState('');\r\n    const [userAvatar, setUserAvatar] = React.useState('');\r\n    const [cards, setCards] = React.useState([]);\r\n\r\n\r\n    React.useEffect(() => {\r\n        api.getUserInfo()\r\n        .then(userInfo => {\r\n            setUserName(userInfo.name)\r\n            setUserDescription(userInfo.about)\r\n            setUserAvatar(userInfo.avatar)\r\n        })\r\n\r\n        .catch((err) => {\r\n            console.log(`Произошла ошибка - ${err}`);\r\n        })\r\n\r\n        api.getInitialCards()\r\n            .then(cards => {\r\n                setCards(cards);\r\n            })\r\n\r\n            .catch((err) => {\r\n                console.log(`Произошла ошибка - ${err}`);\r\n            })\r\n\r\n\r\n        \r\n    }, []);\r\n\r\n   \r\n    return(\r\n        (\r\n        <main className='content'>\r\n            \r\n            <section className='profile page__profile'>\r\n              <div className='profile__main-container'>\r\n                <div className='profile__avatar-container'>\r\n                    <img className='profile__avatar' src={userAvatar} alt='Аватарка'/>\r\n                    <div className=\"profile__avatar-overlay\">\r\n                        <button onClick={props.onEditAvatar} className='profile__avatar-edit' type=\"button\"></button>\r\n                    </div> \r\n                </div>\r\n                <div className='profile__info'>\r\n                    <div className='profile__title-button'>\r\n                        <h1 className='profile__title'>{userName}</h1>\r\n                        <button onClick={props.onEditProfile} className='profile__edit-button' type='button'></button>\r\n                    </div>\r\n                    <p className='profile__subtitle'>{userDescription}</p>\r\n                </div>\r\n              </div>\r\n                <button onClick={props.onAddPlace} className='profile__add-button' type='button'></button>\r\n\r\n            </section>\r\n            <section className='elements page__elements'>\r\n                <ul className='elements__list'>\r\n                    { cards.map(item => (\r\n                            <Card\r\n                            key={item._id}\r\n                            link={item.link}\r\n                            name={item.name}\r\n                            likes={item.likes}\r\n                            onCardClick={props.onCardClick}\r\n                            \r\n                            \r\n                            />\r\n                    )\r\n                        )}\r\n                </ul>\r\n            </section>\r\n        </main>\r\n        )\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return(\r\n        (\r\n        <footer className=\"footer page__footer\">\r\n            <p className='footer__text'>&copy; {new Date().getFullYear()} Mesto Russia</p>\r\n        </footer>\r\n        )\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n\r\n    \r\n    return (\r\n        (\r\n        <div className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' :''}`}>\r\n            <div className={`popup__container popup__container_${props.name}`}>\r\n                <button className={`popup__close popup__close_${props.name}`} type='button' onClick={props.onClose}></button>\r\n                <h2 className='popup__title'>{props.title}</h2>\r\n                <form className={`popup__form popup__form_${props.name}`} name={`${props.name}-form`} noValidate>\r\n                    {props.children}\r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    );\r\n\r\n}\r\n\r\nexport default PopupWithForm;\r\n\r\n\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n    //console.log(props);\r\n\r\n    \r\n\r\n    return(\r\n        (\r\n        <div className={`popup popup_img ${props.card.imgOpen ? 'popup_opened' :''}`}>\r\n            <div className='popup__container popup__container_img'>\r\n                <button className=\"popup__close popup__close_img\" type=\"button\" onClick={props.onClose}></button>\r\n                <img className=\"popup__image\" src={props.card.link} alt={props.card.name}/>\r\n                <h2 className=\"popup__title popup__title_img\">{props.card.name}</h2>\r\n            </div>\r\n        </div>\r\n        )\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\n\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\n\r\n\r\n\r\nfunction App() {\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n    const [selectedCard, setSelectedCard] = React.useState({name: '', link: '', imgOpen: false});\r\n    \r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n    \r\n    \r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n    \r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n\r\n    function closeAllPopups() {\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setSelectedCard({name: '', link: '', imgOpen: false});\r\n    }\r\n\r\n    function handleCardClick(card) {\r\n        setSelectedCard(card);\r\n        \r\n    }\r\n\r\n  return (\r\n      <>\r\n    <div className=\"page\">\r\n        <Header />\r\n        <Main\r\n        onEditProfile={handleEditProfileClick}\r\n        onAddPlace={handleAddPlaceClick}\r\n        onEditAvatar={handleEditAvatarClick}\r\n        onCardClick={handleCardClick}\r\n        />\r\n        <Footer />\r\n\r\n        <section className='popups'>\r\n            <PopupWithForm \r\n            name='user'\r\n            title='Редактировать профиль' \r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={closeAllPopups}\r\n            >\r\n            \r\n                <input type=\"text\" className=\"popup__input popup__input_topform\" name=\"popup-name\" placeholder=\"Имя\" required minLength='2' maxLength='40' id=\"name-user-input\"/>\r\n                <span className=\"popup__span\" id=\"name-user-input-error\"></span>\r\n                <input type=\"text\" className=\"popup__input popup__input_bottomform\" name=\"popup-about\" placeholder=\"О себе\" required minLength='2' maxLength='200' id=\"about-user-input\"/>\r\n                <span className=\"popup__span\" id=\"about-user-input-error\"></span>\r\n                <button className=\"popup__button\" type='submit'>Сохранить</button>\r\n            \r\n            </PopupWithForm>\r\n\r\n\r\n            <PopupWithForm\r\n            name='place'\r\n            title='Новое место'\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={closeAllPopups}\r\n            >\r\n                \r\n                <input type=\"text\" className=\"popup__input popup__input_topform\" name=\"popup-name-place\" placeholder=\"Название\" required minLength='2' maxLength='30' id=\"name-place-input\"/>\r\n                <span className='popup__span' id=\"name-place-input-error\"></span>\r\n                <input type=\"url\" className=\"popup__input popup__input_bottomform\" name=\"popup-link-photo\" placeholder=\"Ссылка на картинку\" required id=\"link-input\"/>\r\n                <span className='popup__span' id=\"link-input-error\"></span>\r\n                <button className=\"popup__button\" type='submit'>Сохранить</button>\r\n                \r\n            </PopupWithForm>\r\n\r\n\r\n            <PopupWithForm name='areyousure' title='Вы уверены?'>\r\n                \r\n                <button className=\"popup__button popup__button_areyousure\" type='submit'>Да</button>\r\n                \r\n            </PopupWithForm>\r\n\r\n            <PopupWithForm\r\n            name='new-avatar'\r\n            title='Обновить аватар'\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            >\r\n                \r\n                <input type=\"url\" className=\"popup__input popup__input_topform popup__input_new-avatar\" name=\"new-avatar-photo\" placeholder=\"Ссылка на картинку\" required id=\"new-avatar\"/>\r\n                <span className='popup__span' id=\"new-avatar-error\"></span>\r\n                <button className=\"popup__button popup__button_new-avatar\" type='submit'>Сохранить</button>\r\n                \r\n            </PopupWithForm>\r\n\r\n            <ImagePopup\r\n            onClose={closeAllPopups}\r\n            card={selectedCard}\r\n            \r\n             />\r\n            \r\n        </section>\r\n    </div>\r\n\r\n\r\n</>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}